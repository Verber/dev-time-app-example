<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by PHP Project Wizard (PPW) 1.0.4 on Mon Dec 16 22:15:30 EET 2013 -->

<project name="devtimedemo" default="build" basedir=".">
    <property name="source" value="src"/>
    <property name="vendor.directory" value="vendor"/>

    <target name="clean" description="Clean up and create artifact directories">
        <delete dir="${basedir}/build/api"/>
        <delete dir="${basedir}/build/code-browser"/>
        <delete dir="${basedir}/build/coverage"/>
        <delete dir="${basedir}/build/logs"/>
        <delete dir="${basedir}/build/pdepend"/>

        <mkdir dir="${basedir}/build/api"/>
        <mkdir dir="${basedir}/build/code-browser"/>
        <mkdir dir="${basedir}/build/coverage"/>
        <mkdir dir="${basedir}/build/logs"/>
        <mkdir dir="${basedir}/build/pdepend"/>
    </target>

    <target name="phpunit" description="Run unit tests using PHPUnit and generates junit.xml and clover.xml">
        <exec executable="bin/phpunit" failonerror="true">
            <arg value="-c"/>
            <arg file="app/phpunit.xml.dist"/>
        </exec>
    </target>

    <target name="parallelTasks"
            description="Run the pdepend, phpmd, phpcpd, phpcs, phpdoc and phploc tasks in parallel using a maximum of 2 threads.">
        <parallel threadCount="2">
            <sequential>
                <antcall target="pdepend"/>
                <antcall target="phpmd"/>
            </sequential>
            <antcall target="phpcpd"/>
            <antcall target="phpcs"/>
            <antcall target="phpdoc"/>
            <antcall target="phploc"/>
        </parallel>
    </target>

    <target name="pdepend" description="Generate jdepend.xml and software metrics charts using PHP_Depend">
        <exec executable="bin/pdepend">
            <arg line="--jdepend-xml=${basedir}/build/logs/jdepend.xml
              --jdepend-chart=${basedir}/build/pdepend/dependencies.svg
              --overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg
              ${source}"/>
        </exec>
    </target>

    <target name="phpmd" description="Generate pmd.xml using PHPMD">
        <exec executable="bin/phpmd">
            <arg line="${source}
              xml
              codesize,design,naming,unusedcode
              --reportfile ${basedir}/build/logs/pmd.xml"/>
        </exec>
    </target>

    <target name="phpcpd" description="Generate pmd-cpd.xml using PHPCPD">
        <exec executable="bin/phpcpd">
            <arg line="--log-pmd ${basedir}/build/logs/pmd-cpd.xml ${source}"/>
        </exec>
    </target>

    <target name="phploc" description="Generate phploc.csv">
        <exec executable="bin/phploc">
            <arg line="--log-csv ${basedir}/build/logs/phploc.csv ${source}"/>
        </exec>
    </target>

    <target name="phpcs" description="Generate checkstyle.xml using PHP_CodeSniffer">
        <exec executable="bin/phpcs" output="/dev/null">
            <arg line="--report=checkstyle
              --report-file=${basedir}/build/logs/checkstyle.xml
              --standard=PSR-2
              ${source}"/>
        </exec>
    </target>

    <target name="phpdoc" description="Generate API documentation using PHPDocumentor">
        <exec executable="bin/phpdoc.php">
            <arg line="-d ${source} -t ${basedir}/build/api"/>
        </exec>
    </target>

    <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
        <exec executable="bin/phpcb">
            <arg line="--log    ${basedir}/build/logs
              --source ${source}
              --output ${basedir}/build/code-browser"/>
        </exec>
    </target>

    <target name="build" depends="clean,update,install,parallelTasks,phpunit,phpcb"/>


    <target name="deploy" depends="git.reset_origin_head,update,install,symfony.cache.clear,symfony.assetic.dump"/>

    <target name="symfony.assetic.dump">
        <exec executable="php">
            <arg file="app/console"/>
            <arg value="assetic:dump"/>
            <arg value="--env=dev"/>
        </exec>
        <exec executable="php">
            <arg file="app/console"/>
            <arg value="assetic:dump"/>
            <arg value="--env=prod"/>
        </exec>
    </target>

    <target name="symfony.cache.clear">
        <exec executable="php">
            <arg file="app/console"/>
            <arg value="cache:clear"/>
            <arg value="--env=dev"/>
        </exec>
        <exec executable="php">
            <arg file="app/console"/>
            <arg value="cache:clear"/>
            <arg value="--env=prod"/>
        </exec>
    </target>

    <target name="git.reset_origin_head">
        <exec executable="git">
            <arg value="checkout"/>
            <arg value="master"/>
        </exec>
        <exec executable="git">
            <arg value="fetch"/>
            <arg value="origin"/>
        </exec>
        <exec executable="git">
            <arg value="reset"/>
            <arg value="--hard"/>
            <arg value="origin/HEAD"/>
        </exec>
    </target>

    <target name="install" depends="vendor.check" unless="vendor.check">
        <antcall target="composer.init"/>
        <antcall target="composer.install"/>
    </target>

    <target name="update" depends="vendor.check" if="vendor.check">
        <antcall target="composer.update"/>
    </target>

    <target name="composer.init">
        <exec executable="sh">
            <arg value="-c"/>
            <arg value="curl -sS https://getcomposer.org/installer | php"/>
        </exec>
        <chmod file="${basedir}/composer.phar" perm="ugo+rx"/>
    </target>

    <target name="composer.install">
        <exec executable="${basedir}/composer.phar">
            <arg value="install"/>
        </exec>
    </target>

    <target name="composer.update">
        <exec executable="${basedir}/composer.phar">
            <arg value="update"/>
        </exec>
    </target>

    <target name="vendor.check">
        <condition property="vendor.check">
            <available file="${basedir}/${vendor.directory}" type="dir"/>
        </condition>
    </target>
</project>
